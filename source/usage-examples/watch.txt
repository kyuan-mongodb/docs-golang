=================
Watch for Changes
=================

.. default-domain:: mongodb

You can open a change stream on a ``MongoCollection``,
``MongoDatabase``, or ``MongoClient`` by using the ``Watch()`` method.

The following example passes an aggregation pipeline to the ``Watch()``
method, which opens a change stream on the ``haikus`` collection and
prints inserted documents:

.. include:: /includes/usage-examples/run-example-tip.rst

.. literalinclude:: /includes/usage-examples/code-snippets/watch.go
   :start-after: begin watch
   :end-before: end watch
   :emphasize-lines: 3
   :language: go
   :dedent:

Click `here <{+example+}/watch.go>`__ to see a fully runnable example.

Expected Result
---------------

After you run the preceding example, run the :doc:`Insert a
Document usage example </usage-examples/insertOne>` in a different
shell. After the insert operation completes, you should see output
similar to the following:  

.. code-block:: json
   :copyable: false

   // results truncated 
   Waiting For Change Events. Insert something in MongoDB!
   {fullDocument [{_id ObjectID("...")} {title Record of ...} {text No bytes, no problem....}]}

.. note::

   The shell will continue to run until terminate it.

Additional Information
----------------------

For more information on opening a change stream and handling
potential errors, see our following guides: 

- Go Driver <TODO: Change Stream Guide>
- MongoDB Server Manual :manual:`Change Streams Documentation </changeStreams>`.

API Documentation
~~~~~~~~~~~~~~~~~

`Watch() <{+godocs+}/mongo#Collection.Watch>`__
