==============================
Specify Which Fields to Return
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to specify whether fields in a
document should return from read operations.

Sample Data
~~~~~~~~~~~

Run the following snippet to load the documents into the ``ratings``
collection of the ``tea`` database:

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/projection.go 
   :language: go
   :dedent:
   :start-after: begin insertDocs
   :end-before: end insertDocs

.. include:: /includes/fundamentals/tea-sample-data-ending.rst

Project
-------

To specify whether fields in a document should return, pass an interface
specifying the field and ``0`` or ``1`` to the ``SetProjection()``
function of a read operation's options.

Specify the options as the last parameter to the following read
operation functions:

- ``Find()``
- ``FindOne()``
- ``FindOneAndDelete()``
- ``FindOneAndReplace()``
- ``FindOneAndUpdate()``

When using a projection, you can only specify to either include or
exclude fields. This rule **does not** apply to the ``_id`` field. You
must explicitly exclude the ``_id`` field if you do not want it
returned. For an example of this scenario, see the section about
:ref:`including a field <go-include-projection>`.

.. tip::

   If you don't specify a projection, the read operation returns all
   the fields in matched documents.

Exclude a Field
~~~~~~~~~~~~~~~

Specify a ``0`` in the interface passed to the ``SetProjection()``
function to exclude a field. For all fields you don't explicitly list
in the interface, the driver includes them.

Example
~~~~~~~

The following example excludes the ``rating`` from the documents matched
in the ``Find()`` function:

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/projection.go
   :language: go
   :dedent:
   :start-after: begin exclude projection
   :end-before: end exclude projection

After running this example, the output resembles the following:

.. code-block:: none
   :copyable: false

   //results truncated
   [{_id ObjectID("...")} {type Masala}]
   [{_id ObjectID("...")} {type Assam}]
   [{_id ObjectID("...")} {type Oolong}]
   [{_id ObjectID("...")} {type Earl Grey}]
   [{_id ObjectID("...")} {type English Breakfast}]

Include a Field
~~~~~~~~~~~~~~~

Specify a ``1`` in the interface passed to the ``SetProjection()``
function to include a field. For all fields you don't explicitly list
in the interface, the driver excludes them.

.. important::

   You can exclude the ``_id`` field even if you have specified certain
   fields to include.

.. _go-include-projection:

Example
~~~~~~~

The following example performs the following projection on the documents
matched from the ``Find()`` function:

- Include the ``type`` and ``rating`` field
- Exclude the ``_id`` field

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/projection.go
   :language: go
   :dedent:
   :start-after: begin include projection
   :end-before: end include projection

After running this example, the output resembles the following:

.. code-block:: none
   :copyable: false

   [{type Masala} {rating 10}]
   [{type Assam} {rating 5}]
   [{type Oolong} {rating 7}]
   [{type Earl Grey} {rating 8}]
   [{type English Breakfast} {rating 5}]

.. tip:: Using Aggregation 

   You can also include the :manual:`$project </reference/operator/aggregation/skip/>`
   stage to specify a projection in an aggregation pipeline.

   The following example specifies the same projection from the
   preceding example in an aggregation pipeline:

   .. literalinclude:: /includes/fundamentals/code-snippets/CRUD/projection.go
      :language: go
      :dedent:
      :start-after: begin aggregate projection
      :end-before: end aggregate projection

Additional Information
----------------------

For more information on performing read operations, see our guide on
:doc:`retrieving data </fundamentals/crud/read-operations/retrieve>`.

API Documentation
~~~~~~~~~~~~~~~~~

For more information on any of the functions or types discussed in this
guide, see the following API Documentation:

- `Find() <{+api+}/mongo#Collection.Find>`__
- `FindOptions.SetProjection() <{+api+}/mongo/options#FindOptions.SetProjection>`__
- `FindOne() <{+api+}/mongo#Collection.FindOne>`__
- `FindOneAndDelete() <{+api+}/mongo#Collection.FindOneAndDelete>`__
- `FindOneAndReplace() <{+api+}/mongo#Collection.FindOneAndReplace>`__
- `FindOneAndUpdate() <{+api+}/mongo#Collection.FindOneAndUpdate>`__
- `Aggregate() <{+api+}/mongo#Collection.Aggregate>`__
