=====================
Skip Returned Results
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to skip a specified number of returned
results from read operations. 

Sample Data
~~~~~~~~~~~

Run the following snippet to load the documents into the ``ratings``
collection of the ``tea`` database:

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/skip.go
   :language: go
   :dedent:
   :start-after: begin insertDocs
   :end-before: end insertDocs

.. include:: /includes/fundamentals/tea-sample-data-ending.rst

Skip
----

To skip a specified number of returned results from a query, pass the
number of documents you want to skip to the ``SetSkip()`` function of
the read operation's options.

Specify the options as the last parameter to the following read
operation functions:

- ``Find()``
- ``FindOne()``
- ``CountDocuments()``
- ``gridfs.Bucket.Find()``

If the number of documents exceeds the number of matched documents for a
query, that query returns no documents.

.. tip::

    Passing in a negative number to the ``SetSkip()`` function results
    in a runtime error.

Documents return in a natural order, which can lead to skipping random
documents. To avoid this, use a ``SetSort()`` function before the
``SetSkip()`` function.

Example
~~~~~~~

The following example performs the following actions in order with the
``Find()`` function:

- Sorts all the matched documents in ascending order
- Skips the first two documents

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/skip.go
   :language: go
   :dedent:
   :start-after: begin skip
   :end-before: end skip

After running the preceding example, the output resembles the following:

.. code-block:: none
   :copyable: false

   //results truncated
   [{_id ObjectID("...")} {type Oolong} {rating 7}]
   [{_id ObjectID("...")} {type Earl Grey} {rating 8}]
   [{_id ObjectID("...")} {type Masala} {rating 10}]

.. tip:: Using Aggregation 

   You can also include the :manual:`$skip </reference/operator/aggregation/skip/>`
   stage to specify a skip in an aggregation pipeline.

   The following example specifies the same sort and skip from the
   preceding example in an aggregation pipeline:

   .. literalinclude:: /includes/fundamentals/code-snippets/CRUD/skip.go
      :language: go
      :dedent:
      :start-after: begin aggregate skip
      :end-before: end aggregate skip

Additional Information
----------------------

For more information on the read operations used in this guide, see the
following guides:

- :doc:`Retrieve Data </fundamentals/crud/read-operations/retrieve>`.
- :doc:`Sort Results </fundamentals/crud/read-operations/sort>`. 

API Documentation
~~~~~~~~~~~~~~~~~

For more information on any of the functions or types discussed in this
guide, see the following API Documentation:

- `Find() <{+api+}/mongo#Collection.Find>`__
- `FindOptions.SetSkip() <{+api+}/mongo/options#FindOptions.SetSkip>`__
- `Aggregate() <{+api+}/mongo#Collection.Aggregate>`__
- `CountDocuments() <{+api+}/mongo#Collection.CountDocuments>`__
- `gridfs.Bucket.Find() <{+api+}/mongo/gridfs#Bucket.Find>`__
