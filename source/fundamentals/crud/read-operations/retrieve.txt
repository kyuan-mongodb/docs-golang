==============
Retrieve Data
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to retrieve data from your MongoDB
collections using **read operations**.

Read operations allow you to do the following:

- Retrieve documents from your collections by using :ref:`find operations <retrieve-find>`
- Perform transformations on documents in your collections by using :ref:`aggregation operations <retrieve-aggregation>`

Sample Data
~~~~~~~~~~~

To run the examples in this guide, load these documents into the
``ratings`` collection of the ``tea`` database with the following
snippet:

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/retrieve.go
   :language: go
   :dedent:
   :start-after: begin insert docs
   :end-before: end insert docs

.. include:: /includes/fundamentals/tea-sample-data-ending.rst

.. _retrieve-find:

Find Operations
---------------

Use **find operations** to retrieve data from MongoDB. Find operations
consist of the ``Find()`` and ``FindOne()`` functions.

Find All Documents
~~~~~~~~~~~~~~~~~~

The ``Find()`` function expects you to pass a ``Context`` type and a
query filter. The function returns *all* documents that match the filter
as a ``Cursor`` type.

.. To learn how to access data in a cursor, see the :doc:`Cursor
.. </fundamentals/crud/read-operations/cursor>` guide.

Find One Document
~~~~~~~~~~~~~~~~~

The ``FindOne()`` function expects you to pass a ``Context`` type and a
query filter. The function returns *the first document* that matches the
filter as a ``SingleResult`` type.

To learn how to access data in a ``SingleResult`` see the :ref:`BSON
<bson-unmarshalling>` guide.

Example
```````

The following example passes a context and a filter to the ``Find()``
function, which matches documents where the ``ratings`` field falls
between ``5`` and ``10``:

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/retrieve.go
   :language: go
   :dedent:
   :start-after: begin find docs
   :end-before: end find docs

After running the preceding example, the output resembles the following:

.. code-block:: none
   :copyable: false

    //results truncated
   [_id:ObjectID("...") type:Masala rating:7 ]
   [_id:ObjectID("...") type:Earl Grey rating:9 ]

.. _retrieve-aggregation:

Aggregation Operations
----------------------

Use **aggregation operations** to retrieve and transform data from
MongoDB. Perform aggregation operations using the ``Aggregate()``
function.

Aggregation
~~~~~~~~~~~

The ``Aggregate()`` function expects you to pass a ``Context`` type and
an **aggregation pipeline**. An aggregation pipeline defines how to
transform data through stages. Some of the stages are matching
documents, renaming fields, and grouping values.

The function returns the resulting documents in a ``Cursor`` type. If
you omit the :manual:`$match </reference/operator/aggregation/match/#mongodb-pipeline-pipe.-match>`
stage, the pipeline proceeds using all documents in the collection.

.. To learn how to access data in a cursor, see the :doc:`Cursor
.. </fundamentals/crud/read-operations/cursor>` guide.

Example
```````

The following example passes a context and an aggregation pipeline that:

- Groups reviews by types
- Calculates the average rating of each type

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/retrieve.go
   :language: go
   :dedent:
   :start-after: begin aggregate docs
   :end-before: end aggregate docs

After running the preceding example, the output resembles the following:

.. code-block:: none
   :copyable: false

   Masala has an average rating of 8.5
   Earl Grey has an average rating of 7

For more information on how to construct an aggregation pipeline, see
the MongoDB server manual page on :manual:`Aggregation
</core/aggregation-pipeline/>`.

Additional Information
----------------------

For runnable examples of the find operations, see the following usage
examples:

- :doc:`Find a Document </usage-examples/findOne>`
- :doc:`Find Multiple Documents </usage-examples/find>`

.. For more information on how to specify a query, see the :doc:`Specify
.. a Query </fundamentals/crud/query-document>` guide.

.. For more information on aggregation, see the
.. :doc:`Aggregation </fundamentals/aggregation>` guide.

API Documentation
~~~~~~~~~~~~~~~~~

For more information on any of the functions or types discussed in this
guide, see the following API Documentation:

- `Find() <{+api+}/mongo#Collection.Find>`__
- `Cursor <{+api+}/mongo#Cursor>`__
- `FindOne() <{+api+}/mongo#Collection.FindOne>`__
- `SingleResult <{+api+}/mongo#SingleResult>`__
- `Aggregate() <{+api+}/mongo#Collection.Aggregate>`__
